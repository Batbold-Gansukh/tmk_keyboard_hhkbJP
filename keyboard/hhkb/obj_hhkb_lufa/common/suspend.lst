   1               		.file	"suspend.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.suspend_power_down,"ax",@progbits
  11               	.global	suspend_power_down
  13               	suspend_power_down:
  14               	.LFB4:
  15               		.file 1 "../../common/suspend.c"
   1:../../common/suspend.c **** #include "suspend.h"
   2:../../common/suspend.c **** #include "matrix.h"
   3:../../common/suspend.c **** #include "action.h"
   4:../../common/suspend.c **** #include "backlight.h"
   5:../../common/suspend.c **** 
   6:../../common/suspend.c **** 
   7:../../common/suspend.c **** void suspend_power_down(void)
   8:../../common/suspend.c **** {
  16               		.loc 1 8 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
   9:../../common/suspend.c **** #ifdef BACKLIGHT_ENABLE
  10:../../common/suspend.c ****     backlight_set(0);
  11:../../common/suspend.c **** #endif
  12:../../common/suspend.c **** #ifndef NO_SUSPEND_POWER_DOWN
  13:../../common/suspend.c ****     // Enable watchdog to wake from MCU sleep
  14:../../common/suspend.c ****     cli();
  22               		.loc 1 14 0
  23               	/* #APP */
  24               	 ;  14 "../../common/suspend.c" 1
  25 0000 F894      		cli
  26               	 ;  0 "" 2
  15:../../common/suspend.c ****     wdt_reset();
  27               		.loc 1 15 0
  28               	 ;  15 "../../common/suspend.c" 1
  29 0002 A895      		wdr
  30               	 ;  0 "" 2
  16:../../common/suspend.c **** 
  17:../../common/suspend.c ****     // Watchdog Interrupt and System Reset Mode
  18:../../common/suspend.c ****     //wdt_enable(WDTO_1S);
  19:../../common/suspend.c ****     //WDTCSR |= _BV(WDIE);
  20:../../common/suspend.c ****     
  21:../../common/suspend.c ****     // Watchdog Interrupt Mode
  22:../../common/suspend.c ****     wdt_intr_enable(WDTO_120MS);
  31               		.loc 1 22 0
  32               	/* #NOAPP */
  33 0004 23E4      		ldi r18,lo8(67)
  34 0006 88E1      		ldi r24,lo8(24)
  35 0008 90E0      		ldi r25,0
  36               	/* #APP */
  37               	 ;  22 "../../common/suspend.c" 1
  38 000a 0FB6      		in __tmp_reg__,__SREG__
  39 000c F894      		cli
  40 000e A895      		wdr
  41 0010 8093 6000 		sts 96,r24
  42 0014 0FBE      		out __SREG__,__tmp_reg__
  43 0016 2093 6000 		sts 96,r18
  44               		
  45               	 ;  0 "" 2
  23:../../common/suspend.c ****     
  24:../../common/suspend.c ****     // TODO: more power saving
  25:../../common/suspend.c ****     // See PicoPower application note
  26:../../common/suspend.c ****     // - I/O port input with pullup
  27:../../common/suspend.c ****     // - prescale clock
  28:../../common/suspend.c ****     // - BOD disable
  29:../../common/suspend.c ****     // - Power Reduction Register PRR
  30:../../common/suspend.c ****     // sleep in power down mode
  31:../../common/suspend.c ****     set_sleep_mode(SLEEP_MODE_PWR_DOWN);
  46               		.loc 1 31 0
  47               	/* #NOAPP */
  48 001a 83B7      		in r24,0x33
  49 001c 817F      		andi r24,lo8(-15)
  50 001e 8460      		ori r24,lo8(4)
  51 0020 83BF      		out 0x33,r24
  32:../../common/suspend.c ****     sleep_enable();
  52               		.loc 1 32 0
  53 0022 83B7      		in r24,0x33
  54 0024 8160      		ori r24,lo8(1)
  55 0026 83BF      		out 0x33,r24
  33:../../common/suspend.c ****     sei();
  56               		.loc 1 33 0
  57               	/* #APP */
  58               	 ;  33 "../../common/suspend.c" 1
  59 0028 7894      		sei
  60               	 ;  0 "" 2
  34:../../common/suspend.c ****     sleep_cpu();
  61               		.loc 1 34 0
  62               	 ;  34 "../../common/suspend.c" 1
  63 002a 8895      		sleep
  64               		
  65               	 ;  0 "" 2
  35:../../common/suspend.c ****     sleep_disable();
  66               		.loc 1 35 0
  67               	/* #NOAPP */
  68 002c 83B7      		in r24,0x33
  69 002e 8E7F      		andi r24,lo8(-2)
  70 0030 83BF      		out 0x33,r24
  36:../../common/suspend.c **** 
  37:../../common/suspend.c ****     // Disable watchdog after sleep
  38:../../common/suspend.c ****     wdt_disable();
  71               		.loc 1 38 0
  72 0032 88E1      		ldi r24,lo8(24)
  73               	/* #APP */
  74               	 ;  38 "../../common/suspend.c" 1
  75 0034 0FB6      		in __tmp_reg__, __SREG__
  76 0036 F894      		cli
  77 0038 8093 6000 		sts 96, r24
  78 003c 1092 6000 		sts 96, __zero_reg__
  79 0040 0FBE      		out __SREG__,__tmp_reg__
  80               		
  81               	 ;  0 "" 2
  82               	/* #NOAPP */
  83 0042 0895      		ret
  84               		.cfi_endproc
  85               	.LFE4:
  87               		.section	.text.suspend_wakeup_condition,"ax",@progbits
  88               	.global	suspend_wakeup_condition
  90               	suspend_wakeup_condition:
  91               	.LFB5:
  39:../../common/suspend.c **** #endif
  40:../../common/suspend.c **** }
  41:../../common/suspend.c **** 
  42:../../common/suspend.c **** bool suspend_wakeup_condition(void)
  43:../../common/suspend.c **** {
  92               		.loc 1 43 0
  93               		.cfi_startproc
  94 0000 CF93      		push r28
  95               	.LCFI0:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 28, -2
  98               	/* prologue: function */
  99               	/* frame size = 0 */
 100               	/* stack size = 1 */
 101               	.L__stack_usage = 1
  44:../../common/suspend.c ****     matrix_scan();
 102               		.loc 1 44 0
 103 0002 0E94 0000 		call matrix_scan
 104               	.LVL0:
 105               	.LBB2:
  45:../../common/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 106               		.loc 1 45 0
 107 0006 C0E0      		ldi r28,0
 108               	.LVL1:
 109               	.L4:
  46:../../common/suspend.c ****         if (matrix_get_row(r)) return true;
 110               		.loc 1 46 0
 111 0008 8C2F      		mov r24,r28
 112 000a 0E94 0000 		call matrix_get_row
 113               	.LVL2:
 114 000e 8111      		cpse r24,__zero_reg__
 115 0010 00C0      		rjmp .L5
  45:../../common/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 116               		.loc 1 45 0 discriminator 2
 117 0012 CF5F      		subi r28,lo8(-(1))
 118               	.LVL3:
 119 0014 C031      		cpi r28,lo8(16)
 120 0016 01F4      		brne .L4
 121 0018 00C0      		rjmp .L3
 122               	.L5:
 123               		.loc 1 46 0
 124 001a 81E0      		ldi r24,lo8(1)
 125               	.L3:
 126               	/* epilogue start */
 127               	.LBE2:
  47:../../common/suspend.c ****     }
  48:../../common/suspend.c ****     return false;
  49:../../common/suspend.c **** }
 128               		.loc 1 49 0
 129 001c CF91      		pop r28
 130               	.LVL4:
 131 001e 0895      		ret
 132               		.cfi_endproc
 133               	.LFE5:
 135               		.section	.text.suspend_wakeup_init,"ax",@progbits
 136               	.global	suspend_wakeup_init
 138               	suspend_wakeup_init:
 139               	.LFB6:
  50:../../common/suspend.c **** 
  51:../../common/suspend.c **** // run immediately after wakeup
  52:../../common/suspend.c **** void suspend_wakeup_init(void)
  53:../../common/suspend.c **** {
 140               		.loc 1 53 0
 141               		.cfi_startproc
 142               	/* prologue: function */
 143               	/* frame size = 0 */
 144               	/* stack size = 0 */
 145               	.L__stack_usage = 0
  54:../../common/suspend.c ****     // clear keyboard state
  55:../../common/suspend.c ****     clear_keyboard();
 146               		.loc 1 55 0
 147 0000 0C94 0000 		jmp clear_keyboard
 148               	.LVL5:
 149               		.cfi_endproc
 150               	.LFE6:
 152               		.section	.text.__vector_12,"ax",@progbits
 153               	.global	__vector_12
 155               	__vector_12:
 156               	.LFB7:
  56:../../common/suspend.c **** #ifdef BACKLIGHT_ENABLE
  57:../../common/suspend.c ****     backlight_init();
  58:../../common/suspend.c **** #endif
  59:../../common/suspend.c **** }
  60:../../common/suspend.c **** 
  61:../../common/suspend.c **** #ifndef NO_SUSPEND_POWER_DOWN
  62:../../common/suspend.c **** /* watchdog timeout */
  63:../../common/suspend.c **** ISR(WDT_vect)
  64:../../common/suspend.c **** {
 157               		.loc 1 64 0
 158               		.cfi_startproc
 159 0000 1F92      		push r1
 160               	.LCFI1:
 161               		.cfi_def_cfa_offset 3
 162               		.cfi_offset 1, -2
 163 0002 0F92      		push r0
 164               	.LCFI2:
 165               		.cfi_def_cfa_offset 4
 166               		.cfi_offset 0, -3
 167 0004 0FB6      		in r0,__SREG__
 168 0006 0F92      		push r0
 169 0008 1124      		clr __zero_reg__
 170               	/* prologue: Signal */
 171               	/* frame size = 0 */
 172               	/* stack size = 3 */
 173               	.L__stack_usage = 3
 174               	/* epilogue start */
  65:../../common/suspend.c ****     /* wakeup from MCU sleep mode */
  66:../../common/suspend.c **** /*
  67:../../common/suspend.c ****     // blink LED
  68:../../common/suspend.c ****     static uint8_t led_state = 0;
  69:../../common/suspend.c ****     static uint8_t led_count = 0;
  70:../../common/suspend.c ****     led_count++;
  71:../../common/suspend.c ****     if ((led_count & 0x07) == 0) {
  72:../../common/suspend.c ****         led_set((led_state ^= (1<<USB_LED_CAPS_LOCK)));
  73:../../common/suspend.c ****     }
  74:../../common/suspend.c **** */
  75:../../common/suspend.c **** }
 175               		.loc 1 75 0
 176 000a 0F90      		pop r0
 177 000c 0FBE      		out __SREG__,r0
 178 000e 0F90      		pop r0
 179 0010 1F90      		pop r1
 180 0012 1895      		reti
 181               		.cfi_endproc
 182               	.LFE7:
 184               		.text
 185               	.Letext0:
 186               		.file 2 "/usr/local/Cellar/avr-gcc/4.9.2/avr/include/stdint.h"
 187               		.file 3 "../../common/matrix.h"
 188               		.file 4 "../../common/action.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 suspend.c
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:4      *ABS*:000000000000003f __SREG__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:13     .text.suspend_power_down:0000000000000000 suspend_power_down
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:90     .text.suspend_wakeup_condition:0000000000000000 suspend_wakeup_condition
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:138    .text.suspend_wakeup_init:0000000000000000 suspend_wakeup_init
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//cc9Koc59.s:155    .text.__vector_12:0000000000000000 __vector_12

UNDEFINED SYMBOLS
matrix_scan
matrix_get_row
clear_keyboard
