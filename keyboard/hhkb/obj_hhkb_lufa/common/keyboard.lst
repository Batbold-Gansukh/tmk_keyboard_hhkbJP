   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_init,"ax",@progbits
  11               	.global	keyboard_init
  13               	keyboard_init:
  14               	.LFB102:
  15               		.file 1 "../../common/keyboard.c"
   1:../../common/keyboard.c **** /*
   2:../../common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../common/keyboard.c **** 
   4:../../common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../common/keyboard.c **** (at your option) any later version.
   8:../../common/keyboard.c **** 
   9:../../common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../common/keyboard.c **** GNU General Public License for more details.
  13:../../common/keyboard.c **** 
  14:../../common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../common/keyboard.c **** */
  17:../../common/keyboard.c **** #include <stdint.h>
  18:../../common/keyboard.c **** #include <util/delay.h>
  19:../../common/keyboard.c **** #include "keyboard.h"
  20:../../common/keyboard.c **** #include "matrix.h"
  21:../../common/keyboard.c **** #include "keymap.h"
  22:../../common/keyboard.c **** #include "host.h"
  23:../../common/keyboard.c **** #include "led.h"
  24:../../common/keyboard.c **** #include "keycode.h"
  25:../../common/keyboard.c **** #include "timer.h"
  26:../../common/keyboard.c **** #include "print.h"
  27:../../common/keyboard.c **** #include "debug.h"
  28:../../common/keyboard.c **** #include "command.h"
  29:../../common/keyboard.c **** #include "util.h"
  30:../../common/keyboard.c **** #include "sendchar.h"
  31:../../common/keyboard.c **** #include "bootmagic.h"
  32:../../common/keyboard.c **** #include "eeconfig.h"
  33:../../common/keyboard.c **** #include "backlight.h"
  34:../../common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../common/keyboard.c **** #   include "mousekey.h"
  36:../../common/keyboard.c **** #endif
  37:../../common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../common/keyboard.c **** #endif
  40:../../common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../common/keyboard.c **** #include "serial_mouse.h"
  42:../../common/keyboard.c **** #endif
  43:../../common/keyboard.c **** 
  44:../../common/keyboard.c **** 
  45:../../common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  46:../../common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  47:../../common/keyboard.c **** {
  48:../../common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  49:../../common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  50:../../common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  51:../../common/keyboard.c ****         return false;
  52:../../common/keyboard.c **** 
  53:../../common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  54:../../common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  55:../../common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  56:../../common/keyboard.c ****             return true;
  57:../../common/keyboard.c ****     }
  58:../../common/keyboard.c ****     return false;
  59:../../common/keyboard.c **** }
  60:../../common/keyboard.c **** #endif
  61:../../common/keyboard.c **** 
  62:../../common/keyboard.c **** 
  63:../../common/keyboard.c **** void keyboard_init(void)
  64:../../common/keyboard.c **** {
  16               		.loc 1 64 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  65:../../common/keyboard.c ****     timer_init();
  22               		.loc 1 65 0
  23 0000 0E94 0000 		call timer_init
  24               	.LVL0:
  66:../../common/keyboard.c ****     matrix_init();
  25               		.loc 1 66 0
  26 0004 0E94 0000 		call matrix_init
  27               	.LVL1:
  67:../../common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  68:../../common/keyboard.c ****     ps2_mouse_init();
  69:../../common/keyboard.c **** #endif
  70:../../common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  71:../../common/keyboard.c ****     serial_mouse_init();
  72:../../common/keyboard.c **** #endif
  73:../../common/keyboard.c **** 
  74:../../common/keyboard.c **** 
  75:../../common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  76:../../common/keyboard.c ****     bootmagic();
  28               		.loc 1 76 0
  29 0008 0C94 0000 		jmp bootmagic
  30               	.LVL2:
  31               		.cfi_endproc
  32               	.LFE102:
  34               		.section	.text.keyboard_set_leds,"ax",@progbits
  35               	.global	keyboard_set_leds
  37               	keyboard_set_leds:
  38               	.LFB104:
  77:../../common/keyboard.c **** #endif
  78:../../common/keyboard.c **** 
  79:../../common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  80:../../common/keyboard.c ****     backlight_init();
  81:../../common/keyboard.c **** #endif
  82:../../common/keyboard.c **** }
  83:../../common/keyboard.c **** 
  84:../../common/keyboard.c **** /*
  85:../../common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  86:../../common/keyboard.c ****  * This is repeatedly called as fast as possible.
  87:../../common/keyboard.c ****  */
  88:../../common/keyboard.c **** void keyboard_task(void)
  89:../../common/keyboard.c **** {
  90:../../common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
  91:../../common/keyboard.c ****     static uint8_t led_status = 0;
  92:../../common/keyboard.c ****     matrix_row_t matrix_row = 0;
  93:../../common/keyboard.c ****     matrix_row_t matrix_change = 0;
  94:../../common/keyboard.c **** 
  95:../../common/keyboard.c ****     matrix_scan();
  96:../../common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  97:../../common/keyboard.c ****         matrix_row = matrix_get_row(r);
  98:../../common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
  99:../../common/keyboard.c ****         if (matrix_change) {
 100:../../common/keyboard.c ****             if (debug_matrix) matrix_print();
 101:../../common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 102:../../common/keyboard.c ****             if (has_ghost_in_row(r)) {
 103:../../common/keyboard.c ****                 matrix_prev[r] = matrix_row;
 104:../../common/keyboard.c ****                 continue;
 105:../../common/keyboard.c ****             }
 106:../../common/keyboard.c **** #endif
 107:../../common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 108:../../common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 109:../../common/keyboard.c ****                     action_exec((keyevent_t){
 110:../../common/keyboard.c ****                         .key = (key_t){ .row = r, .col = c },
 111:../../common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 112:../../common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 113:../../common/keyboard.c ****                     });
 114:../../common/keyboard.c ****                     // record a processed key
 115:../../common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 116:../../common/keyboard.c ****                     // process a key per task call
 117:../../common/keyboard.c ****                     goto MATRIX_LOOP_END;
 118:../../common/keyboard.c ****                 }
 119:../../common/keyboard.c ****             }
 120:../../common/keyboard.c ****         }
 121:../../common/keyboard.c ****     }
 122:../../common/keyboard.c ****     // call with pseudo tick event when no real key event.
 123:../../common/keyboard.c ****     action_exec(TICK);
 124:../../common/keyboard.c **** 
 125:../../common/keyboard.c **** MATRIX_LOOP_END:
 126:../../common/keyboard.c **** 
 127:../../common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 128:../../common/keyboard.c ****     // mousekey repeat & acceleration
 129:../../common/keyboard.c ****     mousekey_task();
 130:../../common/keyboard.c **** #endif
 131:../../common/keyboard.c **** 
 132:../../common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 133:../../common/keyboard.c ****     ps2_mouse_task();
 134:../../common/keyboard.c **** #endif
 135:../../common/keyboard.c **** 
 136:../../common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 137:../../common/keyboard.c ****         serial_mouse_task();
 138:../../common/keyboard.c **** #endif
 139:../../common/keyboard.c **** 
 140:../../common/keyboard.c ****     // update LED
 141:../../common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 142:../../common/keyboard.c ****         led_status = host_keyboard_leds();
 143:../../common/keyboard.c ****         keyboard_set_leds(led_status);
 144:../../common/keyboard.c ****     }
 145:../../common/keyboard.c **** }
 146:../../common/keyboard.c **** 
 147:../../common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 148:../../common/keyboard.c **** {
  39               		.loc 1 148 0
  40               		.cfi_startproc
  41               	.LVL3:
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
 149:../../common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 150:../../common/keyboard.c ****     led_set(leds);
  46               		.loc 1 150 0
  47 0000 0C94 0000 		jmp led_set
  48               	.LVL4:
  49               		.cfi_endproc
  50               	.LFE104:
  52               		.section	.text.keyboard_task,"ax",@progbits
  53               	.global	keyboard_task
  55               	keyboard_task:
  56               	.LFB103:
  89:../../common/keyboard.c **** {
  57               		.loc 1 89 0
  58               		.cfi_startproc
  59 0000 CF92      		push r12
  60               	.LCFI0:
  61               		.cfi_def_cfa_offset 3
  62               		.cfi_offset 12, -2
  63 0002 DF92      		push r13
  64               	.LCFI1:
  65               		.cfi_def_cfa_offset 4
  66               		.cfi_offset 13, -3
  67 0004 EF92      		push r14
  68               	.LCFI2:
  69               		.cfi_def_cfa_offset 5
  70               		.cfi_offset 14, -4
  71 0006 FF92      		push r15
  72               	.LCFI3:
  73               		.cfi_def_cfa_offset 6
  74               		.cfi_offset 15, -5
  75 0008 0F93      		push r16
  76               	.LCFI4:
  77               		.cfi_def_cfa_offset 7
  78               		.cfi_offset 16, -6
  79 000a 1F93      		push r17
  80               	.LCFI5:
  81               		.cfi_def_cfa_offset 8
  82               		.cfi_offset 17, -7
  83 000c CF93      		push r28
  84               	.LCFI6:
  85               		.cfi_def_cfa_offset 9
  86               		.cfi_offset 28, -8
  87 000e DF93      		push r29
  88               	.LCFI7:
  89               		.cfi_def_cfa_offset 10
  90               		.cfi_offset 29, -9
  91 0010 CDB7      		in r28,__SP_L__
  92 0012 DEB7      		in r29,__SP_H__
  93               	.LCFI8:
  94               		.cfi_def_cfa_register 28
  95 0014 2B97      		sbiw r28,11
  96               	.LCFI9:
  97               		.cfi_def_cfa_offset 21
  98 0016 0FB6      		in __tmp_reg__,__SREG__
  99 0018 F894      		cli
 100 001a DEBF      		out __SP_H__,r29
 101 001c 0FBE      		out __SREG__,__tmp_reg__
 102 001e CDBF      		out __SP_L__,r28
 103               	/* prologue: function */
 104               	/* frame size = 11 */
 105               	/* stack size = 19 */
 106               	.L__stack_usage = 19
 107               	.LVL5:
  95:../../common/keyboard.c ****     matrix_scan();
 108               		.loc 1 95 0
 109 0020 0E94 0000 		call matrix_scan
 110               	.LVL6:
 111 0024 30E0      		ldi r19,lo8(matrix_prev.4585)
 112 0026 E32E      		mov r14,r19
 113 0028 30E0      		ldi r19,hi8(matrix_prev.4585)
 114 002a F32E      		mov r15,r19
 115 002c 00E0      		ldi r16,0
 116 002e 10E0      		ldi r17,0
 117               	.LVL7:
 118               	.L5:
 119 0030 C02E      		mov r12,r16
 120               	.LBB2:
  97:../../common/keyboard.c ****         matrix_row = matrix_get_row(r);
 121               		.loc 1 97 0
 122 0032 802F      		mov r24,r16
 123 0034 0E94 0000 		call matrix_get_row
 124               	.LVL8:
  98:../../common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 125               		.loc 1 98 0
 126 0038 F701      		movw r30,r14
 127 003a D190      		ld r13,Z+
 128 003c 7F01      		movw r14,r30
 129 003e D826      		eor r13,r24
 130               	.LVL9:
  99:../../common/keyboard.c ****         if (matrix_change) {
 131               		.loc 1 99 0
 132 0040 01F4      		brne .L4
 133               	.LVL10:
 134               	.L12:
 135 0042 0F5F      		subi r16,-1
 136 0044 1F4F      		sbci r17,-1
  96:../../common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 137               		.loc 1 96 0
 138 0046 0031      		cpi r16,16
 139 0048 1105      		cpc r17,__zero_reg__
 140 004a 01F4      		brne .L5
 141 004c 00C0      		rjmp .L19
 142               	.LVL11:
 143               	.L4:
 100:../../common/keyboard.c ****             if (debug_matrix) matrix_print();
 144               		.loc 1 100 0
 145 004e 9091 0000 		lds r25,debug_config
 146 0052 91FF      		sbrs r25,1
 147 0054 00C0      		rjmp .L7
 100:../../common/keyboard.c ****             if (debug_matrix) matrix_print();
 148               		.loc 1 100 0 is_stmt 0 discriminator 1
 149 0056 8B87      		std Y+11,r24
 150 0058 0E94 0000 		call matrix_print
 151               	.LVL12:
 152 005c 8B85      		ldd r24,Y+11
 153               	.L7:
 154               	.LVL13:
 155               	.LBE2:
  95:../../common/keyboard.c ****     matrix_scan();
 156               		.loc 1 95 0 is_stmt 1
 157 005e 20E0      		ldi r18,0
 158 0060 30E0      		ldi r19,0
 159               	.LBB4:
 160               	.LBB3:
 108:../../common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 161               		.loc 1 108 0
 162 0062 4D2D      		mov r20,r13
 163 0064 50E0      		ldi r21,0
 164               	.LVL14:
 165               	.L11:
 166 0066 922F      		mov r25,r18
 167 0068 BA01      		movw r22,r20
 168 006a 022E      		mov r0,r18
 169 006c 00C0      		rjmp 2f
 170               		1:
 171 006e 7595      		asr r23
 172 0070 6795      		ror r22
 173               		2:
 174 0072 0A94      		dec r0
 175 0074 02F4      		brpl 1b
 176 0076 60FF      		sbrs r22,0
 177 0078 00C0      		rjmp .L8
 109:../../common/keyboard.c ****                     action_exec((keyevent_t){
 178               		.loc 1 109 0
 179 007a 2E83      		std Y+6,r18
 180 007c CF82      		std Y+7,r12
 111:../../common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 181               		.loc 1 111 0
 182 007e EE24      		clr r14
 183 0080 E394      		inc r14
 184 0082 F12C      		mov r15,__zero_reg__
 185 0084 00C0      		rjmp 2f
 186               		1:
 187 0086 EE0C      		lsl r14
 188 0088 FF1C      		rol r15
 189               		2:
 190 008a 9A95      		dec r25
 191 008c 02F4      		brpl 1b
 192 008e 90E0      		ldi r25,0
 193 0090 8E21      		and r24,r14
 194 0092 9F21      		and r25,r15
 195 0094 21E0      		ldi r18,lo8(1)
 196 0096 892B      		or r24,r25
 197 0098 01F4      		brne .L9
 198 009a 20E0      		ldi r18,0
 199               	.L9:
 109:../../common/keyboard.c ****                     action_exec((keyevent_t){
 200               		.loc 1 109 0
 201 009c 2887      		std Y+8,r18
 112:../../common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 202               		.loc 1 112 0
 203 009e 0E94 0000 		call timer_read
 204               	.LVL15:
 205 00a2 8160      		ori r24,1
 109:../../common/keyboard.c ****                     action_exec((keyevent_t){
 206               		.loc 1 109 0
 207 00a4 782F      		mov r23,r24
 208 00a6 9A87      		std Y+10,r25
 209 00a8 8987      		std Y+9,r24
 210 00aa 4E81      		ldd r20,Y+6
 211 00ac 5F81      		ldd r21,Y+7
 212 00ae 6885      		ldd r22,Y+8
 213 00b0 8A85      		ldd r24,Y+10
 214 00b2 0E94 0000 		call action_exec
 215               	.LVL16:
 115:../../common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 216               		.loc 1 115 0
 217 00b6 F801      		movw r30,r16
 218 00b8 E050      		subi r30,lo8(-(matrix_prev.4585))
 219 00ba F040      		sbci r31,hi8(-(matrix_prev.4585))
 220 00bc 8081      		ld r24,Z
 221 00be 8E25      		eor r24,r14
 222 00c0 8083      		st Z,r24
 117:../../common/keyboard.c ****                     goto MATRIX_LOOP_END;
 223               		.loc 1 117 0
 224 00c2 00C0      		rjmp .L10
 225               	.L8:
 226 00c4 2F5F      		subi r18,-1
 227 00c6 3F4F      		sbci r19,-1
 107:../../common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 228               		.loc 1 107 0
 229 00c8 2830      		cpi r18,8
 230 00ca 3105      		cpc r19,__zero_reg__
 231 00cc 01F4      		brne .L11
 232 00ce 00C0      		rjmp .L12
 233               	.L19:
 234               	.LBE3:
 235               	.LBE4:
 123:../../common/keyboard.c ****     action_exec(TICK);
 236               		.loc 1 123 0
 237 00d0 8FEF      		ldi r24,lo8(-1)
 238 00d2 8983      		std Y+1,r24
 239 00d4 8A83      		std Y+2,r24
 240 00d6 1B82      		std Y+3,__zero_reg__
 241 00d8 0E94 0000 		call timer_read
 242               	.LVL17:
 243 00dc 8160      		ori r24,1
 244 00de 782F      		mov r23,r24
 245 00e0 9D83      		std Y+5,r25
 246 00e2 8C83      		std Y+4,r24
 247 00e4 4981      		ldd r20,Y+1
 248 00e6 5A81      		ldd r21,Y+2
 249 00e8 6B81      		ldd r22,Y+3
 250 00ea 8D81      		ldd r24,Y+5
 251 00ec 0E94 0000 		call action_exec
 252               	.LVL18:
 253               	.L10:
 129:../../common/keyboard.c ****     mousekey_task();
 254               		.loc 1 129 0
 255 00f0 0E94 0000 		call mousekey_task
 256               	.LVL19:
 141:../../common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 257               		.loc 1 141 0
 258 00f4 1091 0000 		lds r17,led_status.4586
 259 00f8 0E94 0000 		call host_keyboard_leds
 260               	.LVL20:
 261 00fc 1817      		cp r17,r24
 262 00fe 01F0      		breq .L3
 142:../../common/keyboard.c ****         led_status = host_keyboard_leds();
 263               		.loc 1 142 0
 264 0100 0E94 0000 		call host_keyboard_leds
 265               	.LVL21:
 266 0104 8093 0000 		sts led_status.4586,r24
 267               	/* epilogue start */
 145:../../common/keyboard.c **** }
 268               		.loc 1 145 0
 269 0108 2B96      		adiw r28,11
 270 010a 0FB6      		in __tmp_reg__,__SREG__
 271 010c F894      		cli
 272 010e DEBF      		out __SP_H__,r29
 273 0110 0FBE      		out __SREG__,__tmp_reg__
 274 0112 CDBF      		out __SP_L__,r28
 275 0114 DF91      		pop r29
 276 0116 CF91      		pop r28
 277 0118 1F91      		pop r17
 278 011a 0F91      		pop r16
 279 011c FF90      		pop r15
 280 011e EF90      		pop r14
 281 0120 DF90      		pop r13
 282               	.LVL22:
 283 0122 CF90      		pop r12
 143:../../common/keyboard.c ****         keyboard_set_leds(led_status);
 284               		.loc 1 143 0
 285 0124 0C94 0000 		jmp keyboard_set_leds
 286               	.LVL23:
 287               	.L3:
 288               	/* epilogue start */
 145:../../common/keyboard.c **** }
 289               		.loc 1 145 0
 290 0128 2B96      		adiw r28,11
 291 012a 0FB6      		in __tmp_reg__,__SREG__
 292 012c F894      		cli
 293 012e DEBF      		out __SP_H__,r29
 294 0130 0FBE      		out __SREG__,__tmp_reg__
 295 0132 CDBF      		out __SP_L__,r28
 296 0134 DF91      		pop r29
 297 0136 CF91      		pop r28
 298 0138 1F91      		pop r17
 299 013a 0F91      		pop r16
 300 013c FF90      		pop r15
 301 013e EF90      		pop r14
 302 0140 DF90      		pop r13
 303               	.LVL24:
 304 0142 CF90      		pop r12
 305 0144 0895      		ret
 306               		.cfi_endproc
 307               	.LFE103:
 309               		.comm	mk_wheel_time_to_max,1,1
 310               		.comm	mk_wheel_max_speed,1,1
 311               		.comm	mk_time_to_max,1,1
 312               		.comm	mk_max_speed,1,1
 313               		.comm	mk_interval,1,1
 314               		.comm	mk_delay,1,1
 315               		.comm	keymap_config,1,1
 316               		.local	matrix_prev.4585
 317               		.comm	matrix_prev.4585,16,1
 318               		.local	led_status.4586
 319               		.comm	led_status.4586,1,1
 320               		.text
 321               	.Letext0:
 322               		.file 2 "/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 323               		.file 3 "../../common/keyboard.h"
 324               		.file 4 "../../common/matrix.h"
 325               		.file 5 "../../common/keymap.h"
 326               		.file 6 "../../common/debug_config.h"
 327               		.file 7 "../../protocol/lufa/LUFA-120730/LUFA/Drivers/USB/Core/USBTask.h"
 328               		.file 8 "../../common/mousekey.h"
 329               		.file 9 "../../common/timer.h"
 330               		.file 10 "../../common/bootmagic.h"
 331               		.file 11 "../../common/led.h"
 332               		.file 12 "../../common/action.h"
 333               		.file 13 "../../common/host.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:4      *ABS*:000000000000003f __SREG__
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:13     .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:37     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:55     .text.keyboard_task:0000000000000000 keyboard_task
                             .bss:0000000000000000 matrix_prev.4585
/var/folders/kj/w_bbx2ws73sgrgbctpd6c4hr0000gn/T//ccTqhiVD.s:317    .bss:0000000000000010 led_status.4586
                            *COM*:0000000000000001 mk_wheel_time_to_max
                            *COM*:0000000000000001 mk_wheel_max_speed
                            *COM*:0000000000000001 mk_time_to_max
                            *COM*:0000000000000001 mk_max_speed
                            *COM*:0000000000000001 mk_interval
                            *COM*:0000000000000001 mk_delay
                            *COM*:0000000000000001 keymap_config

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
led_set
matrix_scan
matrix_get_row
debug_config
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
