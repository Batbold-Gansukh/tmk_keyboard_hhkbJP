   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.keyboard_init,"ax",@progbits
  11               	.global	keyboard_init
  13               	keyboard_init:
  14               	.LFB102:
  15               		.file 1 "../../common/keyboard.c"
   1:../../common/keyboard.c **** /*
   2:../../common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../common/keyboard.c **** 
   4:../../common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../common/keyboard.c **** (at your option) any later version.
   8:../../common/keyboard.c **** 
   9:../../common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../common/keyboard.c **** GNU General Public License for more details.
  13:../../common/keyboard.c **** 
  14:../../common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../common/keyboard.c **** */
  17:../../common/keyboard.c **** #include <stdint.h>
  18:../../common/keyboard.c **** #include <util/delay.h>
  19:../../common/keyboard.c **** #include "keyboard.h"
  20:../../common/keyboard.c **** #include "matrix.h"
  21:../../common/keyboard.c **** #include "keymap.h"
  22:../../common/keyboard.c **** #include "host.h"
  23:../../common/keyboard.c **** #include "led.h"
  24:../../common/keyboard.c **** #include "keycode.h"
  25:../../common/keyboard.c **** #include "timer.h"
  26:../../common/keyboard.c **** #include "print.h"
  27:../../common/keyboard.c **** #include "debug.h"
  28:../../common/keyboard.c **** #include "command.h"
  29:../../common/keyboard.c **** #include "util.h"
  30:../../common/keyboard.c **** #include "sendchar.h"
  31:../../common/keyboard.c **** #include "bootmagic.h"
  32:../../common/keyboard.c **** #include "eeconfig.h"
  33:../../common/keyboard.c **** #include "backlight.h"
  34:../../common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../common/keyboard.c **** #   include "mousekey.h"
  36:../../common/keyboard.c **** #endif
  37:../../common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../common/keyboard.c **** #endif
  40:../../common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../common/keyboard.c **** #include "serial_mouse.h"
  42:../../common/keyboard.c **** #endif
  43:../../common/keyboard.c **** 
  44:../../common/keyboard.c **** 
  45:../../common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  46:../../common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  47:../../common/keyboard.c **** {
  48:../../common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  49:../../common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  50:../../common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  51:../../common/keyboard.c ****         return false;
  52:../../common/keyboard.c **** 
  53:../../common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  54:../../common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  55:../../common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  56:../../common/keyboard.c ****             return true;
  57:../../common/keyboard.c ****     }
  58:../../common/keyboard.c ****     return false;
  59:../../common/keyboard.c **** }
  60:../../common/keyboard.c **** #endif
  61:../../common/keyboard.c **** 
  62:../../common/keyboard.c **** 
  63:../../common/keyboard.c **** void keyboard_init(void)
  64:../../common/keyboard.c **** {
  16               		.loc 1 64 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  65:../../common/keyboard.c ****     timer_init();
  22               		.loc 1 65 0
  23 0000 0E94 0000 		call timer_init
  24               	.LVL0:
  66:../../common/keyboard.c ****     matrix_init();
  25               		.loc 1 66 0
  26 0004 0E94 0000 		call matrix_init
  27               	.LVL1:
  67:../../common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  68:../../common/keyboard.c ****     ps2_mouse_init();
  69:../../common/keyboard.c **** #endif
  70:../../common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  71:../../common/keyboard.c ****     serial_mouse_init();
  72:../../common/keyboard.c **** #endif
  73:../../common/keyboard.c **** 
  74:../../common/keyboard.c **** 
  75:../../common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  76:../../common/keyboard.c ****     bootmagic();
  28               		.loc 1 76 0
  29 0008 0C94 0000 		jmp bootmagic
  30               	.LVL2:
  31               		.cfi_endproc
  32               	.LFE102:
  34               		.section	.text.keyboard_task,"ax",@progbits
  35               	.global	keyboard_task
  37               	keyboard_task:
  38               	.LFB103:
  77:../../common/keyboard.c **** #endif
  78:../../common/keyboard.c **** 
  79:../../common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  80:../../common/keyboard.c ****     backlight_init();
  81:../../common/keyboard.c **** #endif
  82:../../common/keyboard.c **** }
  83:../../common/keyboard.c **** 
  84:../../common/keyboard.c **** /*
  85:../../common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  86:../../common/keyboard.c ****  * This is repeatedly called as fast as possible.
  87:../../common/keyboard.c ****  */
  88:../../common/keyboard.c **** void keyboard_task(void)
  89:../../common/keyboard.c **** {
  39               		.loc 1 89 0
  40               		.cfi_startproc
  41 0000 CF92      		push r12
  42               	.LCFI0:
  43               		.cfi_def_cfa_offset 3
  44               		.cfi_offset 12, -2
  45 0002 DF92      		push r13
  46               	.LCFI1:
  47               		.cfi_def_cfa_offset 4
  48               		.cfi_offset 13, -3
  49 0004 EF92      		push r14
  50               	.LCFI2:
  51               		.cfi_def_cfa_offset 5
  52               		.cfi_offset 14, -4
  53 0006 FF92      		push r15
  54               	.LCFI3:
  55               		.cfi_def_cfa_offset 6
  56               		.cfi_offset 15, -5
  57 0008 0F93      		push r16
  58               	.LCFI4:
  59               		.cfi_def_cfa_offset 7
  60               		.cfi_offset 16, -6
  61 000a 1F93      		push r17
  62               	.LCFI5:
  63               		.cfi_def_cfa_offset 8
  64               		.cfi_offset 17, -7
  65 000c CF93      		push r28
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 9
  68               		.cfi_offset 28, -8
  69 000e DF93      		push r29
  70               	.LCFI7:
  71               		.cfi_def_cfa_offset 10
  72               		.cfi_offset 29, -9
  73 0010 CDB7      		in r28,__SP_L__
  74 0012 DEB7      		in r29,__SP_H__
  75               	.LCFI8:
  76               		.cfi_def_cfa_register 28
  77 0014 2B97      		sbiw r28,11
  78               	.LCFI9:
  79               		.cfi_def_cfa_offset 21
  80 0016 0FB6      		in __tmp_reg__,__SREG__
  81 0018 F894      		cli
  82 001a DEBF      		out __SP_H__,r29
  83 001c 0FBE      		out __SREG__,__tmp_reg__
  84 001e CDBF      		out __SP_L__,r28
  85               	/* prologue: function */
  86               	/* frame size = 11 */
  87               	/* stack size = 19 */
  88               	.L__stack_usage = 19
  89               	.LVL3:
  90:../../common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
  91:../../common/keyboard.c ****     static uint8_t led_status = 0;
  92:../../common/keyboard.c ****     matrix_row_t matrix_row = 0;
  93:../../common/keyboard.c ****     matrix_row_t matrix_change = 0;
  94:../../common/keyboard.c **** 
  95:../../common/keyboard.c ****     matrix_scan();
  90               		.loc 1 95 0
  91 0020 0E94 0000 		call matrix_scan
  92               	.LVL4:
  93 0024 80E0      		ldi r24,lo8(matrix_prev.4770)
  94 0026 C82E      		mov r12,r24
  95 0028 80E0      		ldi r24,hi8(matrix_prev.4770)
  96 002a D82E      		mov r13,r24
  97 002c 00E0      		ldi r16,0
  98 002e 10E0      		ldi r17,0
  99               	.LVL5:
 100               	.L4:
 101 0030 E02E      		mov r14,r16
 102               	.LVL6:
 103               	.LBB6:
  96:../../common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
  97:../../common/keyboard.c ****         matrix_row = matrix_get_row(r);
 104               		.loc 1 97 0
 105 0032 802F      		mov r24,r16
 106 0034 0E94 0000 		call matrix_get_row
 107               	.LVL7:
  98:../../common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 108               		.loc 1 98 0
 109 0038 F601      		movw r30,r12
 110 003a 4191      		ld r20,Z+
 111 003c 6F01      		movw r12,r30
 112 003e F42E      		mov r15,r20
 113 0040 F826      		eor r15,r24
 114               	.LVL8:
  99:../../common/keyboard.c ****         if (matrix_change) {
 115               		.loc 1 99 0
 116 0042 01F4      		brne .L3
 117               	.LVL9:
 118               	.L11:
 119 0044 0F5F      		subi r16,-1
 120 0046 1F4F      		sbci r17,-1
 121               	.LVL10:
  96:../../common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 122               		.loc 1 96 0
 123 0048 0031      		cpi r16,16
 124 004a 1105      		cpc r17,__zero_reg__
 125 004c 01F4      		brne .L4
 126               	.LBE6:
 100:../../common/keyboard.c ****             if (debug_matrix) matrix_print();
 101:../../common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 102:../../common/keyboard.c ****             if (has_ghost_in_row(r)) {
 103:../../common/keyboard.c ****                 matrix_prev[r] = matrix_row;
 104:../../common/keyboard.c ****                 continue;
 105:../../common/keyboard.c ****             }
 106:../../common/keyboard.c **** #endif
 107:../../common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 108:../../common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 109:../../common/keyboard.c ****                     action_exec((keyevent_t){
 110:../../common/keyboard.c ****                         .key = (key_t){ .row = r, .col = c },
 111:../../common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 112:../../common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 113:../../common/keyboard.c ****                     });
 114:../../common/keyboard.c ****                     // record a processed key
 115:../../common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 116:../../common/keyboard.c ****                     // process a key per task call
 117:../../common/keyboard.c ****                     goto MATRIX_LOOP_END;
 118:../../common/keyboard.c ****                 }
 119:../../common/keyboard.c ****             }
 120:../../common/keyboard.c ****         }
 121:../../common/keyboard.c ****     }
 122:../../common/keyboard.c ****     // call with pseudo tick event when no real key event.
 123:../../common/keyboard.c ****     action_exec(TICK);
 127               		.loc 1 123 0
 128 004e 8FEF      		ldi r24,lo8(-1)
 129 0050 8983      		std Y+1,r24
 130 0052 8A83      		std Y+2,r24
 131 0054 1B82      		std Y+3,__zero_reg__
 132 0056 0E94 0000 		call timer_read
 133               	.LVL11:
 134 005a 8160      		ori r24,1
 135 005c 782F      		mov r23,r24
 136 005e 9D83      		std Y+5,r25
 137 0060 8C83      		std Y+4,r24
 138 0062 4981      		ldd r20,Y+1
 139 0064 5A81      		ldd r21,Y+2
 140 0066 6B81      		ldd r22,Y+3
 141 0068 8D81      		ldd r24,Y+5
 142 006a 0E94 0000 		call action_exec
 143               	.LVL12:
 144 006e 00C0      		rjmp .L9
 145               	.LVL13:
 146               	.L3:
 147               	.LBB8:
 100:../../common/keyboard.c ****             if (debug_matrix) matrix_print();
 148               		.loc 1 100 0
 149 0070 9091 0000 		lds r25,debug_config
 150 0074 91FF      		sbrs r25,1
 151 0076 00C0      		rjmp .L6
 100:../../common/keyboard.c ****             if (debug_matrix) matrix_print();
 152               		.loc 1 100 0 is_stmt 0 discriminator 1
 153 0078 8B87      		std Y+11,r24
 154 007a 0E94 0000 		call matrix_print
 155               	.LVL14:
 156 007e 8B85      		ldd r24,Y+11
 157               	.L6:
 158               	.LVL15:
 159               	.LBE8:
  95:../../common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 160               		.loc 1 95 0 is_stmt 1
 161 0080 20E0      		ldi r18,0
 162 0082 30E0      		ldi r19,0
 163               	.LBB9:
 164               	.LBB7:
 108:../../common/keyboard.c ****                     action_exec((keyevent_t){
 165               		.loc 1 108 0
 166 0084 4F2D      		mov r20,r15
 167 0086 50E0      		ldi r21,0
 168               	.LVL16:
 169               	.L10:
 170 0088 922F      		mov r25,r18
 171               	.LVL17:
 172 008a BA01      		movw r22,r20
 173 008c 022E      		mov r0,r18
 174 008e 00C0      		rjmp 2f
 175               		1:
 176 0090 7595      		asr r23
 177 0092 6795      		ror r22
 178               		2:
 179 0094 0A94      		dec r0
 180 0096 02F4      		brpl 1b
 181 0098 60FF      		sbrs r22,0
 182 009a 00C0      		rjmp .L7
 109:../../common/keyboard.c ****                         .key = (key_t){ .row = r, .col = c },
 183               		.loc 1 109 0
 184 009c 2E83      		std Y+6,r18
 185 009e EF82      		std Y+7,r14
 111:../../common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 186               		.loc 1 111 0
 187 00a0 21E0      		ldi r18,lo8(1)
 188 00a2 30E0      		ldi r19,0
 189               	.LVL18:
 190 00a4 6901      		movw r12,r18
 191 00a6 00C0      		rjmp 2f
 192               		1:
 193 00a8 CC0C      		lsl r12
 194 00aa DD1C      		rol r13
 195               		2:
 196 00ac 9A95      		dec r25
 197 00ae 02F4      		brpl 1b
 198 00b0 90E0      		ldi r25,0
 199 00b2 8C21      		and r24,r12
 200 00b4 9D21      		and r25,r13
 201 00b6 892B      		or r24,r25
 202 00b8 01F4      		brne .L8
 203 00ba 20E0      		ldi r18,0
 204               	.L8:
 109:../../common/keyboard.c ****                         .key = (key_t){ .row = r, .col = c },
 205               		.loc 1 109 0
 206 00bc 2887      		std Y+8,r18
 112:../../common/keyboard.c ****                     });
 207               		.loc 1 112 0
 208 00be 0E94 0000 		call timer_read
 209               	.LVL19:
 210 00c2 8160      		ori r24,1
 109:../../common/keyboard.c ****                         .key = (key_t){ .row = r, .col = c },
 211               		.loc 1 109 0
 212 00c4 782F      		mov r23,r24
 213 00c6 9A87      		std Y+10,r25
 214 00c8 8987      		std Y+9,r24
 215 00ca 4E81      		ldd r20,Y+6
 216 00cc 5F81      		ldd r21,Y+7
 217 00ce 6885      		ldd r22,Y+8
 218 00d0 8A85      		ldd r24,Y+10
 219 00d2 0E94 0000 		call action_exec
 220               	.LVL20:
 115:../../common/keyboard.c ****                     // process a key per task call
 221               		.loc 1 115 0
 222 00d6 F801      		movw r30,r16
 223 00d8 E050      		subi r30,lo8(-(matrix_prev.4770))
 224 00da F040      		sbci r31,hi8(-(matrix_prev.4770))
 225 00dc 8081      		ld r24,Z
 226 00de C826      		eor r12,r24
 227 00e0 C082      		st Z,r12
 117:../../common/keyboard.c ****                 }
 228               		.loc 1 117 0
 229 00e2 00C0      		rjmp .L9
 230               	.LVL21:
 231               	.L7:
 232 00e4 2F5F      		subi r18,-1
 233 00e6 3F4F      		sbci r19,-1
 234               	.LVL22:
 107:../../common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 235               		.loc 1 107 0 discriminator 2
 236 00e8 2830      		cpi r18,8
 237 00ea 3105      		cpc r19,__zero_reg__
 238 00ec 01F4      		brne .L10
 239 00ee 00C0      		rjmp .L11
 240               	.LVL23:
 241               	.L9:
 242               	.LBE7:
 243               	.LBE9:
 124:../../common/keyboard.c **** 
 125:../../common/keyboard.c **** MATRIX_LOOP_END:
 126:../../common/keyboard.c **** 
 127:../../common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 128:../../common/keyboard.c ****     // mousekey repeat & acceleration
 129:../../common/keyboard.c ****     mousekey_task();
 244               		.loc 1 129 0
 245 00f0 0E94 0000 		call mousekey_task
 246               	.LVL24:
 130:../../common/keyboard.c **** #endif
 131:../../common/keyboard.c **** 
 132:../../common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 133:../../common/keyboard.c ****     ps2_mouse_task();
 134:../../common/keyboard.c **** #endif
 135:../../common/keyboard.c **** 
 136:../../common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 137:../../common/keyboard.c ****         serial_mouse_task();
 138:../../common/keyboard.c **** #endif
 139:../../common/keyboard.c **** 
 140:../../common/keyboard.c ****     // update LED
 141:../../common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 247               		.loc 1 141 0
 248 00f4 1091 0000 		lds r17,led_status.4771
 249 00f8 0E94 0000 		call host_keyboard_leds
 250               	.LVL25:
 251 00fc 1817      		cp r17,r24
 252 00fe 01F0      		breq .L2
 142:../../common/keyboard.c ****         led_status = host_keyboard_leds();
 253               		.loc 1 142 0
 254 0100 0E94 0000 		call host_keyboard_leds
 255               	.LVL26:
 256 0104 8093 0000 		sts led_status.4771,r24
 257               	.LVL27:
 258               	/* epilogue start */
 143:../../common/keyboard.c ****         keyboard_set_leds(led_status);
 144:../../common/keyboard.c ****     }
 145:../../common/keyboard.c **** }
 259               		.loc 1 145 0
 260 0108 2B96      		adiw r28,11
 261 010a 0FB6      		in __tmp_reg__,__SREG__
 262 010c F894      		cli
 263 010e DEBF      		out __SP_H__,r29
 264 0110 0FBE      		out __SREG__,__tmp_reg__
 265 0112 CDBF      		out __SP_L__,r28
 266 0114 DF91      		pop r29
 267 0116 CF91      		pop r28
 268 0118 1F91      		pop r17
 269 011a 0F91      		pop r16
 270 011c FF90      		pop r15
 271               	.LVL28:
 272 011e EF90      		pop r14
 273 0120 DF90      		pop r13
 274 0122 CF90      		pop r12
 275               	.LBB10:
 276               	.LBB11:
 146:../../common/keyboard.c **** 
 147:../../common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 148:../../common/keyboard.c **** {
 149:../../common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 150:../../common/keyboard.c ****     led_set(leds);
 277               		.loc 1 150 0
 278 0124 0C94 0000 		jmp led_set
 279               	.LVL29:
 280               	.L2:
 281               	/* epilogue start */
 282               	.LBE11:
 283               	.LBE10:
 145:../../common/keyboard.c **** 
 284               		.loc 1 145 0
 285 0128 2B96      		adiw r28,11
 286 012a 0FB6      		in __tmp_reg__,__SREG__
 287 012c F894      		cli
 288 012e DEBF      		out __SP_H__,r29
 289 0130 0FBE      		out __SREG__,__tmp_reg__
 290 0132 CDBF      		out __SP_L__,r28
 291 0134 DF91      		pop r29
 292 0136 CF91      		pop r28
 293 0138 1F91      		pop r17
 294 013a 0F91      		pop r16
 295 013c FF90      		pop r15
 296               	.LVL30:
 297 013e EF90      		pop r14
 298 0140 DF90      		pop r13
 299 0142 CF90      		pop r12
 300 0144 0895      		ret
 301               		.cfi_endproc
 302               	.LFE103:
 304               		.section	.text.keyboard_set_leds,"ax",@progbits
 305               	.global	keyboard_set_leds
 307               	keyboard_set_leds:
 308               	.LFB104:
 148:../../common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 309               		.loc 1 148 0
 310               		.cfi_startproc
 311               	.LVL31:
 312               	/* prologue: function */
 313               	/* frame size = 0 */
 314               	/* stack size = 0 */
 315               	.L__stack_usage = 0
 316               		.loc 1 150 0
 317 0000 0C94 0000 		jmp led_set
 318               	.LVL32:
 319               		.cfi_endproc
 320               	.LFE104:
 322               		.local	led_status.4771
 323               		.comm	led_status.4771,1,1
 324               		.local	matrix_prev.4770
 325               		.comm	matrix_prev.4770,16,1
 326               		.comm	mk_wheel_time_to_max,1,1
 327               		.comm	mk_wheel_max_speed,1,1
 328               		.comm	mk_time_to_max,1,1
 329               		.comm	mk_max_speed,1,1
 330               		.comm	mk_interval,1,1
 331               		.comm	mk_delay,1,1
 332               		.comm	keymap_config,1,1
 333               		.text
 334               	.Letext0:
 335               		.file 2 "/usr/local/Cellar/avr-gcc/4.9.2/avr/include/stdint.h"
 336               		.file 3 "../../common/keyboard.h"
 337               		.file 4 "../../common/matrix.h"
 338               		.file 5 "../../common/keymap.h"
 339               		.file 6 "../../common/debug_config.h"
 340               		.file 7 "../../protocol/lufa/LUFA-120730/LUFA/Drivers/USB/Core/USBTask.h"
 341               		.file 8 "../../common/mousekey.h"
 342               		.file 9 "../../common/timer.h"
 343               		.file 10 "../../common/bootmagic.h"
 344               		.file 11 "../../common/action.h"
 345               		.file 12 "../../common/led.h"
 346               		.file 13 "../../common/host.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:4      *ABS*:000000000000003f __SREG__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:13     .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:37     .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:323    .bss:0000000000000001 matrix_prev.4770
                             .bss:0000000000000000 led_status.4771
/var/folders/67/vcrp0s4s10x_6hfx2yflxzbc0000gn/T//ccri7A5c.s:307    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
                            *COM*:0000000000000001 mk_wheel_time_to_max
                            *COM*:0000000000000001 mk_wheel_max_speed
                            *COM*:0000000000000001 mk_time_to_max
                            *COM*:0000000000000001 mk_max_speed
                            *COM*:0000000000000001 mk_interval
                            *COM*:0000000000000001 mk_delay
                            *COM*:0000000000000001 keymap_config

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
timer_read
action_exec
debug_config
matrix_print
mousekey_task
host_keyboard_leds
led_set
__do_clear_bss
